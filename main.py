import logging
import asyncio
import re
import gspread
import yt_dlp
from oauth2client.service_account import ServiceAccountCredentials
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.filters import Command
from aiogram.utils.markdown import hlink




# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –≥—Ä—É–ø–ø—ã
BOT_TOKEN = "7960166180:AAFXC25aFpd1QDPjh1RHM1Buh5d-cmZVocI"
GROUP_ID = -1002291091171  # –ù–µ –∑–∞–±—É–¥—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å -100 –ø–µ—Ä–µ–¥ ID, –µ—Å–ª–∏ —ç—Ç–æ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞
ADMIN_ID = "1810342367"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
menu_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ", callback_data="send_message")],
        [InlineKeyboardButton(text="üì¢ –°–æ—Ü. —Å–µ—Ç–∏", callback_data="social"),
         InlineKeyboardButton(text="üìù –ó–∞—è–≤–∫–∞", callback_data="request"),
         InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")]
    ]
)

back_button = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]]
)

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–∫–∏
url_pattern = re.compile(r'^(https?://)?(www\.)?([a-zA-Z0-9-]+\.[a-zA-Z]{2,})(/.*)?$', re.IGNORECASE)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("../../home/botbb/valued-road-451914-q7-ea6029d14a3b.json", scope)  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É JSON-—Ñ–∞–π–ª—É
client = gspread.authorize(creds)
sheet = client.open("Video").sheet1  # –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å YouTube
def get_video_title(url):
    ydl_opts = {
        'quiet': True,  # –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–π –≤—ã–≤–æ–¥
        'extract_flat': True  # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    }
    
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            result = ydl.extract_info(url, download=False)
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
            return result.get('title', '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start_handler(message: Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    await message.answer("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç:", reply_markup=menu_keyboard)


# –ö–æ–º–∞–Ω–¥–∞ /social - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏
@dp.message(Command("social"))
async def social_links(message: Message):
    await send_social_links(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üì¢ –°–æ—Ü. —Å–µ—Ç–∏"
@dp.callback_query(lambda c: c.data == "social")
async def social_callback_handler(callback_query: CallbackQuery):
    await edit_message_with_social_links(callback_query.message)
    await callback_query.answer()

async def edit_message_with_social_links(message: Message):
    text = ("üì¢ –°–æ—Ü. –°–µ—Ç–∏:\n\n"
            "üîπ Telegram: https://t.me/nesamishi\n"
            "üîπ Discord: https://discord.gg/fN727fWYDC\n"
            "üîπ Twitch: https://www.twitch.tv/99samishi\n"
            "üîπ Music: https://band.link/nevermxre03\n"
            "üîπ Steam: https://steamcommunity.com/id/99samishi\n"
            "üîπ YouTube: https://www.youtube.com/@99samishi\n")
    await message.edit_text(text, reply_markup=back_button)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚ÑπÔ∏è –û –±–æ—Ç–µ"
@dp.callback_query(lambda c: c.data == "about_bot")
async def about_bot_callback_handler(callback_query: CallbackQuery):
    text=("–≠—Ç–æ—Ç –±–æ—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å–æ —Å—Ç—Ä–∏–º–µ—Ä–æ–º 99samishi")
    await callback_query.message.edit_text(text, reply_markup=back_button)
    await callback_query.answer()



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞—è–≤–∫–∞"
@dp.callback_query(lambda c: c.data == "request")
async def request_button_handler(callback_query: CallbackQuery):
    await callback_query.answer()
    await callback_query.message.delete()  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π, –≤–µ–¥—É—â–µ–π –Ω–∞ Google –§–æ—Ä–º—É
    form_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ Google –§–æ—Ä–º–µ", url="https://docs.google.com/forms/d/e/1FAIpQLSet7zCD4iA0_L3Gp3JjvLXIMiuyJl092iiza_VfPbBj8neFtQ/viewform?usp=dialog")]
    ])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ Google –§–æ—Ä–º—É
    message = await callback_query.message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ:",
        reply_markup=form_keyboard
    )
    
    # –£–¥–∞–ª—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ–Ω–æ –Ω–µ –≤–∏—Å–µ–ª–æ
    await asyncio.sleep(5)  # –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π

    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
    menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message")],
        [InlineKeyboardButton(text="üì¢ –°–æ—Ü. —Å–µ—Ç–∏", callback_data="social"),
         InlineKeyboardButton(text="üìù –ó–∞—è–≤–∫–∞", callback_data="request"),
         InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")]
    ])


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
@dp.callback_query(lambda c: c.data == "send_message")
async def send_message_callback_handler(callback_query: CallbackQuery):
    await callback_query.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (YouTube only).",
                                           reply_markup=back_button)
    await callback_query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
@dp.callback_query(lambda c: c.data == "back")
async def back_button_handler(callback_query: CallbackQuery):
    # –ó–∞–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await callback_query.message.edit_text("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç:", reply_markup=menu_keyboard)
    await callback_query.answer()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Å—Å—ã–ª–∫–∏ –≤ Google Sheets
def is_link_in_table(link):
    links = sheet.col_values(2)  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞
    return link in links


# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∑–∞–ø–∏—Å—å—é –≤ —Ç–∞–±–ª–∏—Ü—É
@dp.message(lambda message: not message.text.startswith("/"))
async def forward_to_group(message: Message):
    if message.chat.type == "private":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –∏–∑ –≥—Ä—É–ø–ø—ã
        user = message.from_user
        username = f"@{user.username}" if user.username else user.full_name
        text = message.text.strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫–æ–π –Ω–∞ YouTube
        if "youtube.com" not in text and "youtu.be" not in text:
            await message.answer("–û—à–∏–±–∫–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∞ —É–∂–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
        if is_link_in_table(text):
            await message.answer("–≠—Ç–∞ —Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥—É—é!")
            return

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å YouTube
        video_title = get_video_title(text)
        if video_title:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
            formatted_text = f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username}\n‚áì‚áì‚áì\n–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: {video_title}\n–°—Å—ã–ª–∫–∞: [—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ YouTube]({text})"
            
            # –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ –≤ Google –¢–∞–±–ª–∏—Ü—É
            sheet.append_row([video_title, text])  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏ —Å—Å—ã–ª–∫—É
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ YouTube
            sent_message = await bot.send_message(chat_id=GROUP_ID, text=formatted_text, parse_mode="Markdown")
            
            # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.answer("–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤–∏–¥–µ–æ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", reply_markup=back_button)
        else:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
